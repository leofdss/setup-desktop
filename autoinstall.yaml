#cloud-config
autoinstall:
    # version is an Autoinstall required field.
    version: 1

    locale: pt_BR.UTF-8
    keyboard:
        layout: br
        variant: ""
    timezone: America/Sao_Paulo

    # This adds the default ubuntu-desktop packages to the system.
    # Any desired additional packages may also be listed here.
    packages:
        - ubuntu-desktop
        - docker.io
        - docker-compose
        - flatpak
        - ubuntu-restricted-extras
        - gnome-software-plugin-flatpak
        - git
        - flameshot
        - curl
        - wget
        - dkms
        - cabextract
        - jq
        - vim

    # This adds the default snaps found on a 22.04 Ubuntu Desktop system.
    # Any desired additional snaps may aslso be listed here.
    snaps:
        - name: firefox
        - name: gnome-3-38-2004
        - name: gtk-common-themes
        - name: snap-store
        - name: snapd-desktop-integration
        - name: code
          channel: stable
          classic: true

    # User creation can occur in one of 3 ways:
    # 1. Create a user using this `identity` section.
    # 2. Create users as documented in cloud-init inside the user-data section,
    #    which means this single-user identity section may be removed.
    # 3. Prompt for user configuration on first boot.  Remove this identity
    #    section and see the "Installation without a default user" section.
    identity:
        realname: "Leo"
        username: leo
        # A password hash is needed. `mkpasswd --method=SHA-512` can help.
        # mkpasswd can be found in the package 'whois'
        password: "$6$v0v7MGLi5tVOe8e1$YpMZVB2WsQLuLlHJCbSXwLvgZj2BOp3t1CsAfW4iU/hwd.TJoK/DLMS371VWs9spM6S57YRjJuHTwqWtugYps."
        hostname: nostromo

    # Subiquity will, by default, configure a partition layout using LVM.
    # The 'direct' layout method shown here will produce a non-LVM result.
    storage:
        layout:
            name: direct

    # Ubuntu Desktop uses the hwe flavor kernel by default.
    # early-commands:
    #     - echo 'linux-generic-hwe-22.04' > /run/kernel-meta-package

    # The live-server ISO does not contain some of the required packages,
    # such as ubuntu-desktop or the hwe kernel (or most of their depdendencies).
    # The system being installed will need some sort of apt access.
    # proxy: http://192.168.0.1:3142

    late-commands:
        # Enable the boot splash
        - >-
            curtin in-target --
            sed -i /etc/default/grub -e
            's/GRUB_CMDLINE_LINUX_DEFAULT=".*/GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"/'
        - curtin in-target -- update-grub
        # Let NetworkManager handle network
        - rm /target/etc/netplan/00-installer-config*yaml
        - >-
            printf "network:\n  version: 2\n  renderer: NetworkManager"
            > /target/etc/netplan/01-network-manager-all.yaml

        # Remove default filesystem and related tools not used with the suggested
        # 'direct' storage layout.  These may yet be required if different
        # partitioning schemes are used.
        - >-
            curtin in-target -- apt-get remove -y
            btrfs-progs cryptsetup* lvm2 xfsprogs

        # Remove other packages present by default in Ubuntu Server but not
        # normally present in Ubuntu Desktop.
        - >-
            curtin in-target -- apt-get remove -y
            ubuntu-server ubuntu-server-minimal
            binutils byobu curl dmeventd finalrd gawk
            kpartx mdadm ncurses-term needrestart open-iscsi openssh-server
            sg3-utils ssh-import-id sssd thin-provisioning-tools vim tmux
            sosreport screen open-vm-tools motd-news-config lxd-agent-loader
            landscape-common htop git fonts-ubuntu-console ethtool

        # Keep cloud-init, as it performs some of the installation on first boot.
        - curtin in-target -- apt-get install -y cloud-init

        # Finally, remove things only installed as dependencies of other things
        # we have already removed.
        - curtin in-target -- apt-get autoremove -y

        # A postinstall script may optionally be used for further install
        # customization. Deploy this postinstall.sh script on the webserver.
        # - wget -O /target/postinstall.sh https://raw.githubusercontent.com/leofdss/setup-desktop/main/postinstall.sh
        # - curtin in-target -- bash /postinstall.sh
        # - rm /target/postinstall.sh

    # Additional cloud-init configuration affecting the target
    # system can be supplied underneath a user-data section inside of
    # autoinstall.
    # user-data:
    #   â€¦
    user-data: # Commands here run during first boot (cannot be interactive)
        runcmd:
            - systemctl start docker
            - systemctl enable docker
            - usermod -aG docker leo
            - flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
            - su leo -c 'bash <(wget -qO- https://raw.githubusercontent.com/leofdss/setup-desktop/main/git/install.sh) -e leonardo.f.desouzasilva@gmail.com -n "Leonardo Farias de Souza Silva"'
            - su leo -c 'wget -qO- https://raw.githubusercontent.com/leofdss/setup-desktop/main/fonts/database.json | bash <(wget -qO- https://raw.githubusercontent.com/leofdss/setup-desktop/main/fonts/install.sh)'
            - git clone https://github.com/medusalix/xone $HOME/xone
            - cd $HOME/xone && ./install.sh --release
            - cd $HOME/xone && xone-get-firmware.sh --skip-disclaimer
            - su leo -c 'bash -c "$(wget https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh -O -)"'
            - su leo -c 'bash <(wget -qO- https://raw.githubusercontent.com/leofdss/setup-desktop/main/oh-my-bash/install.sh)'
